{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider(_ref) {\n  let {\n    store,\n    context,\n    children\n  } = _ref;\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription\n    };\n  }, [store]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","map":{"version":3,"sources":["/Users/kavyamandla/Desktop/react/recipe-application/client/node_modules/react-redux/es/components/Provider.js"],"names":["React","useMemo","ReactReduxContext","createSubscription","useIsomorphicLayoutEffect","Provider","store","context","children","contextValue","subscription","previousState","getState","onStateChange","notifyNestedSubs","trySubscribe","tryUnsubscribe","undefined","Context","createElement","value"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;;AAEA,SAASC,QAAT,OAIG;AAAA,MAJe;AAChBC,IAAAA,KADgB;AAEhBC,IAAAA,OAFgB;AAGhBC,IAAAA;AAHgB,GAIf;AACD,QAAMC,YAAY,GAAGR,OAAO,CAAC,MAAM;AACjC,UAAMS,YAAY,GAAGP,kBAAkB,CAACG,KAAD,CAAvC;AACA,WAAO;AACLA,MAAAA,KADK;AAELI,MAAAA;AAFK,KAAP;AAID,GAN2B,EAMzB,CAACJ,KAAD,CANyB,CAA5B;AAOA,QAAMK,aAAa,GAAGV,OAAO,CAAC,MAAMK,KAAK,CAACM,QAAN,EAAP,EAAyB,CAACN,KAAD,CAAzB,CAA7B;AACAF,EAAAA,yBAAyB,CAAC,MAAM;AAC9B,UAAM;AACJM,MAAAA;AADI,QAEFD,YAFJ;AAGAC,IAAAA,YAAY,CAACG,aAAb,GAA6BH,YAAY,CAACI,gBAA1C;AACAJ,IAAAA,YAAY,CAACK,YAAb;;AAEA,QAAIJ,aAAa,KAAKL,KAAK,CAACM,QAAN,EAAtB,EAAwC;AACtCF,MAAAA,YAAY,CAACI,gBAAb;AACD;;AAED,WAAO,MAAM;AACXJ,MAAAA,YAAY,CAACM,cAAb;AACAN,MAAAA,YAAY,CAACG,aAAb,GAA6BI,SAA7B;AACD,KAHD;AAID,GAfwB,EAetB,CAACR,YAAD,EAAeE,aAAf,CAfsB,CAAzB;AAgBA,QAAMO,OAAO,GAAGX,OAAO,IAAIL,iBAA3B;AACA,SAAO,aAAaF,KAAK,CAACmB,aAAN,CAAoBD,OAAO,CAACb,QAA5B,EAAsC;AACxDe,IAAAA,KAAK,EAAEX;AADiD,GAAtC,EAEjBD,QAFiB,CAApB;AAGD;;AAED,eAAeH,QAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children\n}) {\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription\n    };\n  }, [store]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;"]},"metadata":{},"sourceType":"module"}