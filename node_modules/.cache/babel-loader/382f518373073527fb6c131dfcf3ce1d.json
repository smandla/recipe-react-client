{"ast":null,"code":"var _jsxFileName = \"/Users/kavyamandla/Desktop/react/recipe-react-client/src/components/AddRecipe/AddRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./AddRecipe.module.scss\";\nimport icons from \"../../img/icons.svg\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipe = props => {\n  _s();\n\n  const units = [\"tsp\", \"tbsp\", \"fl oz\", \"cup\", \"pint\", \"quart\", \"g (gallon)\", \"ml\", \"l\", \"dl\", \"lb\", \"oz\", \"mg\", \"g (gram)\", \"kg\", \"mm\", \"cm\", \"m\", \"in\"];\n\n  const onHideHandler = () => {\n    props.setAddingRecipe(false);\n  };\n\n  const [error, setError] = useState();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredAuthor, setEnteredAuthor] = useState(\"\");\n  const [enteredCuisine, setEnteredCuisine] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [enteredServings, setEnteredServings] = useState(\"\");\n  const [enteredCookingTime, setEnteredCookingTime] = useState(\"\");\n  const [ingredients, setIngredients] = useState([{\n    value: null,\n    unit: null,\n    item: null\n  }]);\n  const [directions, setDirections] = useState([{\n    value: null\n  }]);\n  const [enteredImageURL, setEnteredImageURL] = useState(\"\");\n  const [ingVal, setIngVal] = useState(0);\n  const [ingUnit, setIngUnit] = useState(\"\");\n\n  const addIngredientHandler = () => {\n    const val = [...ingredients];\n    val.push({\n      value: null,\n      unit: null,\n      item: null\n    });\n    console.log(val);\n    setIngredients(val);\n  };\n\n  const onIngredientValChangeHandler = (i, e) => {\n    const val = [...ingredients];\n    val[i].value = e.target.value;\n    setIngredients(val);\n  };\n\n  const onIngredientUnitChangeHandler = (i, e) => {\n    console.log(e.target.value);\n    const val = [...ingredients];\n    val[i].unit = e.target.value; // console.log(val);\n\n    setIngredients(val);\n  };\n\n  const onIngredientItemChangeHandler = (i, e) => {\n    console.log(e.target.value);\n    const val = [...ingredients];\n    val[i].item = e.target.value; // console.log(val);\n\n    setIngredients(val);\n  };\n\n  const addDirectionHandler = () => {\n    const val = [...directions];\n    val.push({\n      value: null\n    });\n    setDirections(val);\n  };\n\n  const onDirectionChangeHandler = (i, e) => {\n    const val = [...directions];\n    val[i].value = e.target.value;\n    setDirections(val);\n  };\n\n  const onNameChangeHandler = e => {\n    setEnteredName(e.target.value); // console.log(.target.value);\n  };\n\n  const onCuisineChangeHandler = e => {\n    setEnteredCuisine(e.target.value); // console.log(.target.value);\n  };\n\n  const onCategorySelectHandler = e => {\n    setSelectedCategory(e.target.outerText); // console.log(e.target.outerText);\n  };\n\n  const onImageURLChangeHandler = e => {\n    setEnteredImageURL(e.target.value);\n  };\n\n  console.log(ingredients);\n\n  const onServingsChangeHandler = e => {\n    setEnteredServings(e.target.value); // console.log(.target.value);\n  };\n\n  const onCookingTimeChangeHandler = e => {\n    setEnteredCookingTime(e.target.value); // console.log(.target.value);\n  };\n\n  const onAuthorChangeHandler = e => {\n    setEnteredAuthor(e.target.value); // console.log(.target.value);\n  };\n\n  const saveUserDataHandler = enteredUserData => {\n    const userData = { ...enteredUserData,\n      id: Math.random().toString()\n    };\n    props.onAddRecipe(userData);\n    console.log(userData);\n  };\n\n  const addRecipeHandler = e => {\n    e.preventDefault(); //do some validation\n\n    if (enteredName === \"\" || enteredAuthor === \"\" || enteredImageURL === \"\" || enteredServings === \"\" || enteredCookingTime === \"\" || selectedCategory === \"\" || ingredients === [] || directions === []) {\n      alert(\"Please fill out details!\");\n      return;\n    }\n\n    const newRecipeData = {\n      title: enteredName,\n      publisher: enteredAuthor,\n      img: enteredImageURL,\n      ingredients: ingredients,\n      servings: enteredServings,\n      cookingTime: enteredCookingTime,\n      cuisine: enteredCuisine,\n      category: selectedCategory,\n      directions: directions\n    };\n    console.log(newRecipeData);\n    axios.post(\"https://guarded-hamlet-19105.herokuapp.com/recipes\", newRecipeData).then(res => console.log(res.data));\n    saveUserDataHandler(newRecipeData);\n    setEnteredName(\"\");\n    setEnteredAuthor(\"\");\n    setEnteredCuisine(\"\");\n    setEnteredServings(\"\");\n    setEnteredCookingTime(\"\");\n    setIngredients([{\n      value: null\n    }]);\n    setDirections([{\n      value: null\n    }]);\n    setEnteredImageURL(\"\");\n    onHideHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.exit,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                xlinkHref: `${icons}#icon-exit`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.card_form,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.signup,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_title,\n            children: \"Add Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_body,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Recipe Title*\",\n                onChange: onNameChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Author*\",\n                onChange: onAuthorChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.row,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Image URL*\",\n                onChange: onImageURLChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Cuisine*\",\n                onChange: onCuisineChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Servings*\",\n                onChange: onServingsChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Cooking Time*\",\n                onChange: onCookingTimeChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.row,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.directions,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Ingredients:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), ingredients.map((ingredient, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.dirspan,\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: classes.dirlabel,\n                      children: [i + 1, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Quantity*\",\n                      value: ingredient.value || \"\",\n                      onChange: e => onIngredientValChangeHandler(i, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"search\",\n                      placeholder: \"Unit *\" // value={ingredient.unit || \"\"}\n                      ,\n                      list: \"text_editors\",\n                      onChange: e => onIngredientUnitChangeHandler(i, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: \"text_editors\",\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        multiple: true,\n                        size: \"1\",\n                        children: units.map(a => {\n                          return /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: a,\n                            children: a\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 263,\n                            columnNumber: 38\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Ingredient*\",\n                      value: ingredient.item || \"\",\n                      onChange: e => onIngredientItemChangeHandler(i, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"+\",\n                  className: classes.add,\n                  onClick: addIngredientHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.rows,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Directions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), directions.map((direction, i) => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.dirspan,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: classes.dirlabel,\n                    children: [i + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: `Recipe Step # ${i + 1} `,\n                    value: direction.value || \"\",\n                    onChange: e => onDirectionChangeHandler(i, e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"+\",\n                className: classes.add,\n                onClick: addDirectionHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.row,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.category,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Category: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), props.categoryArr.map(category => {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: classes.categoryButton,\n                    type: \"button\",\n                    onClick: onCategorySelectHandler,\n                    children: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"+\",\n                  className: classes.categoryButton,\n                  onClick: addIngredientHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.rule\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_footer,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"search\",\n              className: classes.submitButton,\n              children: \"ADD RECIPE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRecipe, \"SJstpGUYbJakqDeuozc6u1JoMXg=\");\n\n_c = AddRecipe;\nexport default AddRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/kavyamandla/Desktop/react/recipe-react-client/src/components/AddRecipe/AddRecipe.js"],"names":["React","useState","useEffect","Link","classes","icons","axios","AddRecipe","props","units","onHideHandler","setAddingRecipe","error","setError","enteredName","setEnteredName","enteredAuthor","setEnteredAuthor","enteredCuisine","setEnteredCuisine","selectedCategory","setSelectedCategory","enteredServings","setEnteredServings","enteredCookingTime","setEnteredCookingTime","ingredients","setIngredients","value","unit","item","directions","setDirections","enteredImageURL","setEnteredImageURL","ingVal","setIngVal","ingUnit","setIngUnit","addIngredientHandler","val","push","console","log","onIngredientValChangeHandler","i","e","target","onIngredientUnitChangeHandler","onIngredientItemChangeHandler","addDirectionHandler","onDirectionChangeHandler","onNameChangeHandler","onCuisineChangeHandler","onCategorySelectHandler","outerText","onImageURLChangeHandler","onServingsChangeHandler","onCookingTimeChangeHandler","onAuthorChangeHandler","saveUserDataHandler","enteredUserData","userData","id","Math","random","toString","onAddRecipe","addRecipeHandler","preventDefault","alert","newRecipeData","title","publisher","img","servings","cookingTime","cuisine","category","post","then","res","data","overlay","container","exit","card_form","signup","form_title","form_body","row","map","ingredient","dirspan","dirlabel","a","add","rows","direction","categoryArr","categoryButton","rule","form_footer","submitButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./AddRecipe.module.scss\";\nimport icons from \"../../img/icons.svg\";\nimport axios from \"axios\";\nconst AddRecipe = (props) => {\n  const units = [\n    \"tsp\",\n    \"tbsp\",\n    \"fl oz\",\n    \"cup\",\n    \"pint\",\n    \"quart\",\n    \"g (gallon)\",\n    \"ml\",\n    \"l\",\n    \"dl\",\n    \"lb\",\n    \"oz\",\n    \"mg\",\n    \"g (gram)\",\n    \"kg\",\n    \"mm\",\n    \"cm\",\n    \"m\",\n    \"in\",\n  ];\n  const onHideHandler = () => {\n    props.setAddingRecipe(false);\n  };\n\n  const [error, setError] = useState();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredAuthor, setEnteredAuthor] = useState(\"\");\n  const [enteredCuisine, setEnteredCuisine] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [enteredServings, setEnteredServings] = useState(\"\");\n  const [enteredCookingTime, setEnteredCookingTime] = useState(\"\");\n  const [ingredients, setIngredients] = useState([\n    { value: null, unit: null, item: null },\n  ]);\n  const [directions, setDirections] = useState([{ value: null }]);\n  const [enteredImageURL, setEnteredImageURL] = useState(\"\");\n  const [ingVal, setIngVal] = useState(0);\n  const [ingUnit, setIngUnit] = useState(\"\");\n  const addIngredientHandler = () => {\n    const val = [...ingredients];\n    val.push({ value: null, unit: null, item: null });\n    console.log(val);\n    setIngredients(val);\n  };\n  const onIngredientValChangeHandler = (i, e) => {\n    const val = [...ingredients];\n    val[i].value = e.target.value;\n    setIngredients(val);\n  };\n  const onIngredientUnitChangeHandler = (i, e) => {\n    console.log(e.target.value);\n    const val = [...ingredients];\n    val[i].unit = e.target.value;\n    // console.log(val);\n    setIngredients(val);\n  };\n  const onIngredientItemChangeHandler = (i, e) => {\n    console.log(e.target.value);\n    const val = [...ingredients];\n    val[i].item = e.target.value;\n    // console.log(val);\n    setIngredients(val);\n  };\n  const addDirectionHandler = () => {\n    const val = [...directions];\n    val.push({ value: null });\n    setDirections(val);\n  };\n  const onDirectionChangeHandler = (i, e) => {\n    const val = [...directions];\n    val[i].value = e.target.value;\n    setDirections(val);\n  };\n\n  const onNameChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n    // console.log(.target.value);\n  };\n  const onCuisineChangeHandler = (e) => {\n    setEnteredCuisine(e.target.value);\n    // console.log(.target.value);\n  };\n  const onCategorySelectHandler = (e) => {\n    setSelectedCategory(e.target.outerText);\n    // console.log(e.target.outerText);\n  };\n\n  const onImageURLChangeHandler = (e) => {\n    setEnteredImageURL(e.target.value);\n  };\n  console.log(ingredients);\n  const onServingsChangeHandler = (e) => {\n    setEnteredServings(e.target.value);\n    // console.log(.target.value);\n  };\n  const onCookingTimeChangeHandler = (e) => {\n    setEnteredCookingTime(e.target.value);\n    // console.log(.target.value);\n  };\n  const onAuthorChangeHandler = (e) => {\n    setEnteredAuthor(e.target.value);\n    // console.log(.target.value);\n  };\n  const saveUserDataHandler = (enteredUserData) => {\n    const userData = {\n      ...enteredUserData,\n      id: Math.random().toString(),\n    };\n    props.onAddRecipe(userData);\n    console.log(userData);\n  };\n  const addRecipeHandler = (e) => {\n    e.preventDefault();\n    //do some validation\n    if (\n      enteredName === \"\" ||\n      enteredAuthor === \"\" ||\n      enteredImageURL === \"\" ||\n      enteredServings === \"\" ||\n      enteredCookingTime === \"\" ||\n      selectedCategory === \"\" ||\n      ingredients === [] ||\n      directions === []\n    ) {\n      alert(\"Please fill out details!\");\n      return;\n    }\n    const newRecipeData = {\n      title: enteredName,\n      publisher: enteredAuthor,\n      img: enteredImageURL,\n      ingredients: ingredients,\n      servings: enteredServings,\n      cookingTime: enteredCookingTime,\n      cuisine: enteredCuisine,\n      category: selectedCategory,\n      directions: directions,\n    };\n    console.log(newRecipeData);\n    axios\n      .post(\"https://guarded-hamlet-19105.herokuapp.com/recipes\", newRecipeData)\n      .then((res) => console.log(res.data));\n    saveUserDataHandler(newRecipeData);\n    setEnteredName(\"\");\n    setEnteredAuthor(\"\");\n    setEnteredCuisine(\"\");\n    setEnteredServings(\"\");\n    setEnteredCookingTime(\"\");\n    setIngredients([{ value: null }]);\n    setDirections([{ value: null }]);\n    setEnteredImageURL(\"\");\n    onHideHandler();\n  };\n  return (\n    <div className={classes.overlay}>\n      <div className={classes.container}>\n        <div>\n          <Link to=\"/\">\n            <button className={classes.exit}>\n              <svg>\n                <use xlinkHref={`${icons}#icon-exit`}></use>\n              </svg>\n            </button>\n          </Link>\n        </div>\n        <div className={classes.card_form}>\n          <form className={classes.signup}>\n            <div className={classes.form_title}>Add Recipe</div>\n            <div className={classes.form_body}>\n              <div className={classes.row}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Recipe Title*\"\n                  onChange={onNameChangeHandler}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Author*\"\n                  onChange={onAuthorChangeHandler}\n                />\n              </div>\n              <div className={classes.row}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Image URL*\"\n                  onChange={onImageURLChangeHandler}\n                />\n              </div>\n\n              <div className={classes.row}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Cuisine*\"\n                  onChange={onCuisineChangeHandler}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Servings*\"\n                  onChange={onServingsChangeHandler}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Cooking Time*\"\n                  onChange={onCookingTimeChangeHandler}\n                />\n                {/* <div className={classes.category}>\n                  <label> Category: </label>\n                  <span>\n                    {props.categoryArr.map((category) => {\n                      return (\n                        <button\n                          className={classes.categoryButton}\n                          type=\"button\"\n                          onClick={onCategorySelectHandler}\n                        >\n                          {category}\n                        </button>\n                      );\n                    })}\n                  </span>\n                  <input\n                    type=\"button\"\n                    value=\"+\"\n                    className={classes.categoryButton}\n                    onClick={addIngredientHandler}\n                  />\n                </div> */}\n              </div>\n\n              <div className={classes.row}>\n                {/* <input type=\"text\" onChange={onServingsChangeHandler} /> */}\n                <div className={classes.directions}>\n                  <label>Ingredients:</label>\n                  {ingredients.map((ingredient, i) => {\n                    return (\n                      <span className={classes.dirspan}>\n                        <label className={classes.dirlabel}>{i + 1}.</label>\n                        <input\n                          type=\"text\"\n                          placeholder=\"Quantity*\"\n                          value={ingredient.value || \"\"}\n                          onChange={(e) => onIngredientValChangeHandler(i, e)}\n                        />\n\n                        <input\n                          type=\"search\"\n                          placeholder=\"Unit *\"\n                          // value={ingredient.unit || \"\"}\n                          list=\"text_editors\"\n                          onChange={(e) => onIngredientUnitChangeHandler(i, e)}\n                        />\n\n                        <datalist id=\"text_editors\">\n                          <select multiple size=\"1\">\n                            {units.map((a) => {\n                              return <option value={a}>{a}</option>;\n                            })}\n                          </select>\n                        </datalist>\n                        <input\n                          type=\"text\"\n                          placeholder=\"Ingredient*\"\n                          value={ingredient.item || \"\"}\n                          onChange={(e) => onIngredientItemChangeHandler(i, e)}\n                        />\n                      </span>\n                    );\n                  })}\n\n                  <input\n                    type=\"button\"\n                    value=\"+\"\n                    className={classes.add}\n                    onClick={addIngredientHandler}\n                  />\n                </div>\n              </div>\n              <div className={classes.rows}>\n                {/* <input type=\"text\" onChange={onServingsChangeHandler} /> */}\n\n                <label>Directions:</label>\n                {directions.map((direction, i) => {\n                  return (\n                    <span className={classes.dirspan}>\n                      <label className={classes.dirlabel}>{i + 1}.</label>\n                      <input\n                        type=\"text\"\n                        placeholder={`Recipe Step # ${i + 1} `}\n                        value={direction.value || \"\"}\n                        onChange={(e) => onDirectionChangeHandler(i, e)}\n                      />\n                    </span>\n                  );\n                })}\n\n                <input\n                  type=\"button\"\n                  value=\"+\"\n                  className={classes.add}\n                  onClick={addDirectionHandler}\n                />\n              </div>\n              <div className={classes.row}>\n                <div className={classes.category}>\n                  <label> Category: </label>\n                  {props.categoryArr.map((category) => {\n                    return (\n                      <button\n                        className={classes.categoryButton}\n                        type=\"button\"\n                        onClick={onCategorySelectHandler}\n                      >\n                        {category}\n                      </button>\n                    );\n                  })}\n                  <input\n                    type=\"button\"\n                    value=\"+\"\n                    className={classes.categoryButton}\n                    onClick={addIngredientHandler}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className={classes.rule}></div>\n            <div className={classes.form_footer}>\n              <button type=\"search\" className={classes.submitButton}>\n                ADD RECIPE\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* // <div className={classes.overlay}> */}\n\n      {/* <div className={classes.container}>\n        <div>\n          <Link to=\"/\">\n            <button className={classes.exit}>\n              <svg>\n                <use xlinkHref={`${icons}#icon-exit`}></use>\n              </svg>\n            </button>\n          </Link>\n        </div>\n\n        <div className={classes.details_one}>\n          <h4 className={classes.title}>Add Recipe</h4>\n          <form className={classes.form} onSubmit={addRecipeHandler}>\n            <div className={classes.name}>\n              <label> Title: </label>\n              <input type=\"text\" onChange={onNameChangeHandler} />\n            </div>\n            <div className={classes.name}>\n              <label> Author: </label>\n              <input type=\"text\" onChange={onAuthorChangeHandler} />\n            </div>\n            <div className={classes.name}>\n              <label> Image URL: </label>\n              <input type=\"text\" onChange={onImageURLChangeHandler} />\n            </div>\n            <div className={classes.cuisine}>\n              <label> Cuisine: </label>\n              <input type=\"text\" onChange={onCuisineChangeHandler} />\n            </div>\n\n            <div className={classes.category}>\n              <label> Category: </label>\n              <span>\n                {props.categoryArr.map((category) => {\n                  return (\n                    <button\n                      className={classes.categoryButton}\n                      type=\"button\"\n                      onClick={onCategorySelectHandler}\n                    >\n                      {category}\n                    </button>\n                  );\n                })}\n              </span>\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.categoryButton}\n                onClick={addIngredientHandler}\n              />\n            </div>\n            <div className={classes.extrainfo}>\n              <span className={classes.extraspan}>\n                <label> Servings: </label>\n                <input type=\"text\" onChange={onServingsChangeHandler} />\n              </span>\n              <span className={classes.extraspan}>\n                <label> Cooking Time: </label>\n                <input type=\"text\" onChange={onCookingTimeChangeHandler} />\n              </span>\n            </div>\n            <div className={classes.directions}>\n              <label>Ingredients:</label>\n              {ingredients.map((ingredient, i) => {\n                return (\n                  <span className={classes.dirspan}>\n                    <label className={classes.dirlabel}>{i + 1}.</label>\n                    <input\n                      type=\"text\"\n                      value={ingredient.value || \"\"}\n                      onChange={(e) => onIngredientValChangeHandler(i, e)}\n                    />\n\n                    <input\n                      type=\"search\"\n                      // value={ingredient.unit || \"\"}\n                      list=\"text_editors\"\n                      onChange={(e) => onIngredientUnitChangeHandler(i, e)}\n                    />\n\n                    <datalist id=\"text_editors\">\n                      <select multiple size=\"1\">\n                        {units.map((a) => {\n                          return <option value={a}>{a}</option>;\n                        })}\n                      </select>\n                    </datalist>\n                    <input\n                      type=\"text\"\n                      value={ingredient.item || \"\"}\n                      onChange={(e) => onIngredientItemChangeHandler(i, e)}\n                    />\n                  </span>\n                );\n              })}\n\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.add}\n                onClick={addIngredientHandler}\n              />\n            </div>\n            <div className={classes.directions}>\n              <label>Directions:</label>\n              {directions.map((direction, i) => {\n                return (\n                  <span className={classes.dirspan}>\n                    <label className={classes.dirlabel}>{i + 1}.</label>\n                    <input\n                      type=\"text\"\n                      value={direction.value || \"\"}\n                      onChange={(e) => onDirectionChangeHandler(i, e)}\n                    />\n                  </span>\n                );\n              })}\n\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.add}\n                onClick={addDirectionHandler}\n              />\n            </div>\n            <div className={classes.center}>\n              <button type=\"search\" className={classes.submitButton}>\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div> */}\n\n      {/* </div> */}\n    </div>\n  );\n};\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}