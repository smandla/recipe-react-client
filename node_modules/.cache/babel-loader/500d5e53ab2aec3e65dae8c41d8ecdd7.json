{"ast":null,"code":"var _jsxFileName = \"/Users/kavyamandla/Desktop/react/recipe-application/client/src/components/AddRecipe/AddRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./AddRecipe.module.scss\";\nimport icons from \"../../img/icons.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipe = props => {\n  _s();\n\n  const onHideHandler = () => {\n    props.setAddingRecipe(false);\n  };\n\n  const categoryArr = [\"vegetarian\", \"non-vegetarian\", \"breakfast\", \"lunch\", \"dinner\", \"desserts\", \"pescatarian\"];\n  const [error, setError] = useState();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredAuthor, setEnteredAuthor] = useState(\"\");\n  const [enteredCuisine, setEnteredCuisine] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [enteredServings, setEnteredServings] = useState(\"\");\n  const [enteredCookingTime, setEnteredCookingTime] = useState(\"\");\n  const [ingredients, setIngredients] = useState([{\n    value: null\n  }]);\n  const [directions, setDirections] = useState([{\n    value: null\n  }]);\n  const [enteredImageURL, setEnteredImageURL] = useState(\"\");\n\n  const addIngredientHandler = () => {\n    const val = [...ingredients];\n    val.push({\n      value: null\n    });\n    setIngredients(val);\n  };\n\n  const onIngredientChangeHandler = (i, e) => {\n    const val = [...ingredients];\n    val[i].value = e.target.value;\n    setIngredients(val);\n  };\n\n  const addDirectionHandler = () => {\n    const val = [...directions];\n    val.push({\n      value: null\n    });\n    setDirections(val);\n  };\n\n  const onDirectionChangeHandler = (i, e) => {\n    const val = [...directions];\n    val[i].value = e.target.value;\n    setDirections(val);\n  };\n\n  const onNameChangeHandler = e => {\n    setEnteredName(e.target.value); // console.log(.target.value);\n  };\n\n  const onCuisineChangeHandler = e => {\n    setEnteredCuisine(e.target.value); // console.log(.target.value);\n  };\n\n  const onCategorySelectHandler = e => {\n    setSelectedCategory(e.target.outerText); // console.log(e.target.outerText);\n  };\n\n  const onImageURLChangeHandler = e => {\n    setEnteredImageURL(e.target.value);\n  };\n\n  console.log(ingredients);\n\n  const onServingsChangeHandler = e => {\n    setEnteredServings(e.target.value); // console.log(.target.value);\n  };\n\n  const onCookingTimeChangeHandler = e => {\n    setEnteredCookingTime(e.target.value); // console.log(.target.value);\n  };\n\n  const onAuthorChangeHandler = e => {\n    setEnteredAuthor(e.target.value); // console.log(.target.value);\n  };\n\n  const saveUserDataHandler = enteredUserData => {\n    const userData = { ...enteredUserData,\n      id: Math.random().toString()\n    };\n    props.onAddRecipe(userData);\n    console.log(userData);\n  };\n\n  const addRecipeHandler = e => {\n    e.preventDefault(); //do some validation\n\n    if (enteredName === undefined || enteredAuthor === undefined || enteredImageURL === undefined || enteredServings === undefined || enteredCookingTime === undefined || selectedCategory === undefined || ingredients === undefined || directions === undefined) {\n      console.alert(\"Please fill out details!\");\n    }\n\n    const newRecipeData = {\n      title: enteredName,\n      publisher: enteredAuthor,\n      img: enteredImageURL,\n      ingredients: ingredients,\n      servings: enteredServings,\n      cookingTime: enteredCookingTime,\n      cuisine: enteredCuisine,\n      category: selectedCategory,\n      directions: directions\n    };\n    saveUserDataHandler(newRecipeData);\n    setEnteredName(\"\");\n    setEnteredAuthor(\"\");\n    setEnteredCuisine(\"\");\n    setEnteredServings(\"\");\n    setEnteredCookingTime(\"\");\n    setIngredients([{\n      value: null\n    }]);\n    setDirections([{\n      value: null\n    }]);\n    setEnteredImageURL(\"\");\n    onHideHandler();\n    /**\n     *  title: \"Snickerdoodles\",\n    publisher: \"Kavya Mandla\",\n    ingredients: [\n      \"2 avocados\",\n      \"1/3 cup diced red onion\",\n      \"1/3 cup sundried tomatoes\",\n    ],\n    servings: 3,\n    cookingTime: \"45 minutes\",\n    directions: [\"mix ingredients together\", \"wrap in eggroll\"],\n    img:\n     */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.exit,\n          onClick: onHideHandler,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: `${icons}#icon-exit`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details_one,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: addRecipeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.name,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: onNameChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.name,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Author: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: onAuthorChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.name,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Image URL: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: onImageURLChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cuisine,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Cuisine: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: onCuisineChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.category,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Category: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: categoryArr.map(category => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: classes.categoryButton,\n                  type: \"button\",\n                  onClick: onCategorySelectHandler,\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.extrainfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Servings: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: onServingsChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Cooking Time: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: onCookingTimeChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.ingredients,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), ingredients.map((ingredient, i) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ingredient.value || \"\",\n                  onChange: e => onIngredientChangeHandler(i, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"+\",\n              className: classes.add,\n              onClick: addIngredientHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.directions,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Directions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), directions.map((direction, i) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: direction.value || \"\",\n                  onChange: e => onDirectionChangeHandler(i, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"+\",\n              className: classes.add,\n              onClick: addDirectionHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"search\",\n            className: classes.add,\n            children: \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRecipe, \"qsiMMpzgiFo/StwjAAVThaAV6u8=\");\n\n_c = AddRecipe;\nexport default AddRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/kavyamandla/Desktop/react/recipe-application/client/src/components/AddRecipe/AddRecipe.js"],"names":["React","useState","useEffect","classes","icons","AddRecipe","props","onHideHandler","setAddingRecipe","categoryArr","error","setError","enteredName","setEnteredName","enteredAuthor","setEnteredAuthor","enteredCuisine","setEnteredCuisine","selectedCategory","setSelectedCategory","enteredServings","setEnteredServings","enteredCookingTime","setEnteredCookingTime","ingredients","setIngredients","value","directions","setDirections","enteredImageURL","setEnteredImageURL","addIngredientHandler","val","push","onIngredientChangeHandler","i","e","target","addDirectionHandler","onDirectionChangeHandler","onNameChangeHandler","onCuisineChangeHandler","onCategorySelectHandler","outerText","onImageURLChangeHandler","console","log","onServingsChangeHandler","onCookingTimeChangeHandler","onAuthorChangeHandler","saveUserDataHandler","enteredUserData","userData","id","Math","random","toString","onAddRecipe","addRecipeHandler","preventDefault","undefined","alert","newRecipeData","title","publisher","img","servings","cookingTime","cuisine","category","overlay","container","exit","details_one","form","name","map","categoryButton","extrainfo","ingredient","add","direction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classes from \"./AddRecipe.module.scss\";\nimport icons from \"../../img/icons.svg\";\nconst AddRecipe = (props) => {\n  const onHideHandler = () => {\n    props.setAddingRecipe(false);\n  };\n  const categoryArr = [\n    \"vegetarian\",\n    \"non-vegetarian\",\n    \"breakfast\",\n    \"lunch\",\n    \"dinner\",\n    \"desserts\",\n    \"pescatarian\",\n  ];\n  const [error, setError] = useState();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredAuthor, setEnteredAuthor] = useState(\"\");\n  const [enteredCuisine, setEnteredCuisine] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [enteredServings, setEnteredServings] = useState(\"\");\n  const [enteredCookingTime, setEnteredCookingTime] = useState(\"\");\n  const [ingredients, setIngredients] = useState([{ value: null }]);\n  const [directions, setDirections] = useState([{ value: null }]);\n  const [enteredImageURL, setEnteredImageURL] = useState(\"\");\n  const addIngredientHandler = () => {\n    const val = [...ingredients];\n    val.push({ value: null });\n    setIngredients(val);\n  };\n  const onIngredientChangeHandler = (i, e) => {\n    const val = [...ingredients];\n    val[i].value = e.target.value;\n    setIngredients(val);\n  };\n  const addDirectionHandler = () => {\n    const val = [...directions];\n    val.push({ value: null });\n    setDirections(val);\n  };\n  const onDirectionChangeHandler = (i, e) => {\n    const val = [...directions];\n    val[i].value = e.target.value;\n    setDirections(val);\n  };\n\n  const onNameChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n    // console.log(.target.value);\n  };\n  const onCuisineChangeHandler = (e) => {\n    setEnteredCuisine(e.target.value);\n    // console.log(.target.value);\n  };\n  const onCategorySelectHandler = (e) => {\n    setSelectedCategory(e.target.outerText);\n    // console.log(e.target.outerText);\n  };\n\n  const onImageURLChangeHandler = (e) => {\n    setEnteredImageURL(e.target.value);\n  };\n  console.log(ingredients);\n  const onServingsChangeHandler = (e) => {\n    setEnteredServings(e.target.value);\n    // console.log(.target.value);\n  };\n  const onCookingTimeChangeHandler = (e) => {\n    setEnteredCookingTime(e.target.value);\n    // console.log(.target.value);\n  };\n  const onAuthorChangeHandler = (e) => {\n    setEnteredAuthor(e.target.value);\n    // console.log(.target.value);\n  };\n  const saveUserDataHandler = (enteredUserData) => {\n    const userData = {\n      ...enteredUserData,\n      id: Math.random().toString(),\n    };\n    props.onAddRecipe(userData);\n    console.log(userData);\n  };\n  const addRecipeHandler = (e) => {\n    e.preventDefault();\n    //do some validation\n    if (\n      enteredName === undefined ||\n      enteredAuthor === undefined ||\n      enteredImageURL === undefined ||\n      enteredServings === undefined ||\n      enteredCookingTime === undefined ||\n      selectedCategory === undefined ||\n      ingredients === undefined ||\n      directions === undefined\n    ) {\n      console.alert(\"Please fill out details!\");\n    }\n    const newRecipeData = {\n      title: enteredName,\n      publisher: enteredAuthor,\n      img: enteredImageURL,\n      ingredients: ingredients,\n      servings: enteredServings,\n      cookingTime: enteredCookingTime,\n      cuisine: enteredCuisine,\n      category: selectedCategory,\n      directions: directions,\n    };\n    saveUserDataHandler(newRecipeData);\n    setEnteredName(\"\");\n    setEnteredAuthor(\"\");\n    setEnteredCuisine(\"\");\n    setEnteredServings(\"\");\n    setEnteredCookingTime(\"\");\n    setIngredients([{ value: null }]);\n    setDirections([{ value: null }]);\n    setEnteredImageURL(\"\");\n    onHideHandler();\n    /**\n     *  title: \"Snickerdoodles\",\n    publisher: \"Kavya Mandla\",\n    ingredients: [\n      \"2 avocados\",\n      \"1/3 cup diced red onion\",\n      \"1/3 cup sundried tomatoes\",\n    ],\n    servings: 3,\n    cookingTime: \"45 minutes\",\n    directions: [\"mix ingredients together\", \"wrap in eggroll\"],\n    img:\n     */\n  };\n  return (\n    <div className={classes.overlay}>\n      <div className={classes.container}>\n        <div>\n          <button className={classes.exit} onClick={onHideHandler}>\n            <svg>\n              <use xlinkHref={`${icons}#icon-exit`}></use>\n            </svg>\n          </button>\n        </div>\n\n        <div className={classes.details_one}>\n          <h4>Add Recipe</h4>\n          <form className={classes.form} onSubmit={addRecipeHandler}>\n            <div className={classes.name}>\n              <label> Title: </label>\n              <input type=\"text\" onChange={onNameChangeHandler} />\n            </div>\n            <div className={classes.name}>\n              <label> Author: </label>\n              <input type=\"text\" onChange={onAuthorChangeHandler} />\n            </div>\n            <div className={classes.name}>\n              <label> Image URL: </label>\n              <input type=\"text\" onChange={onImageURLChangeHandler} />\n            </div>\n            <div className={classes.cuisine}>\n              <label> Cuisine: </label>\n              <input type=\"text\" onChange={onCuisineChangeHandler} />\n            </div>\n\n            <div className={classes.category}>\n              <label> Category: </label>\n              <span>\n                {categoryArr.map((category) => {\n                  return (\n                    <button\n                      className={classes.categoryButton}\n                      type=\"button\"\n                      onClick={onCategorySelectHandler}\n                    >\n                      {category}\n                    </button>\n                  );\n                })}\n              </span>\n            </div>\n            <div className={classes.extrainfo}>\n              <span>\n                <label> Servings: </label>\n                <input type=\"text\" onChange={onServingsChangeHandler} />\n              </span>\n              <span>\n                <label> Cooking Time: </label>\n                <input type=\"text\" onChange={onCookingTimeChangeHandler} />\n              </span>\n            </div>\n            <div className={classes.ingredients}>\n              <label>Ingredients:</label>\n              {ingredients.map((ingredient, i) => {\n                return (\n                  <span>\n                    <label>{i + 1}</label>\n                    <input\n                      type=\"text\"\n                      value={ingredient.value || \"\"}\n                      onChange={(e) => onIngredientChangeHandler(i, e)}\n                    />\n                  </span>\n                );\n              })}\n\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.add}\n                onClick={addIngredientHandler}\n              />\n            </div>\n            <div className={classes.directions}>\n              <label>Directions:</label>\n              {directions.map((direction, i) => {\n                return (\n                  <span>\n                    <label>{i + 1}</label>\n                    <input\n                      type=\"text\"\n                      value={direction.value || \"\"}\n                      onChange={(e) => onDirectionChangeHandler(i, e)}\n                    />\n                  </span>\n                );\n              })}\n\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.add}\n                onClick={addDirectionHandler}\n              />\n            </div>\n            <button type=\"search\" className={classes.add}>\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}