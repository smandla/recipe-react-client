{"ast":null,"code":"var _jsxFileName = \"/Users/kavyamandla/Desktop/react/recipe-application/client/src/components/AddRecipe/AddRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./AddRecipe.module.scss\";\nimport icons from \"../../img/icons.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipe = props => {\n  _s();\n\n  const onHideHandler = () => {\n    props.setAddingRecipe(false);\n  };\n\n  const categoryArr = [\"vegetarian\", \"non-vegetarian\", \"breakfast\", \"lunch\", \"dinner\", \"desserts\", \"pescatarian\"];\n  const [ingredients, setIngredients] = useState([{\n    value: null\n  }]);\n  const [directions, setDirections] = useState([{\n    value: null\n  }]);\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const addIngredientHandler = () => {\n    const val = [...ingredients];\n    val.push({\n      value: null\n    });\n    setIngredients(val);\n  };\n\n  const onIngredientChangeHandler = (i, e) => {\n    const val = [...ingredients];\n    val[i].value = e.target.value;\n    setIngredients(val);\n  };\n\n  const addDirectionHandler = () => {\n    const val = [...directions];\n    val.push({\n      value: null\n    });\n    setDirections(val);\n  };\n\n  const onDirectionChangeHandler = (i, e) => {\n    const val = [...directions];\n    val[i].value = e.target.value;\n    setDirections(val);\n  };\n\n  console.log(ingredients);\n\n  const onNameChangeHandler = e => {\n    setEnteredName(e.target.value); // console.log(.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.exit,\n          onClick: onHideHandler,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: `${icons}#icon-exit`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details_one,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.name,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: onNameChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cuisine,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Cuisine: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.category,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Category: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: categoryArr.map(category => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: classes.categoryButton,\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.extrainfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Servings: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Cooking Time: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.ingredients,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), ingredients.map((ingredient, i) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ingredient.value || \"\",\n                  onChange: e => onIngredientChangeHandler(i, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"+\",\n              className: classes.add,\n              onClick: addIngredientHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.directions,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Directions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), directions.map((direction, i) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: direction.value || \"\",\n                  onChange: e => onDirectionChangeHandler(i, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"+\",\n              className: classes.add,\n              onClick: addDirectionHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.add,\n            children: \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRecipe, \"CFnUsHakIjZZJakrD9zMWBNckSk=\");\n\n_c = AddRecipe;\nexport default AddRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/kavyamandla/Desktop/react/recipe-application/client/src/components/AddRecipe/AddRecipe.js"],"names":["React","useState","useEffect","classes","icons","AddRecipe","props","onHideHandler","setAddingRecipe","categoryArr","ingredients","setIngredients","value","directions","setDirections","enteredName","setEnteredName","addIngredientHandler","val","push","onIngredientChangeHandler","i","e","target","addDirectionHandler","onDirectionChangeHandler","console","log","onNameChangeHandler","overlay","container","exit","details_one","form","name","cuisine","category","map","categoryButton","extrainfo","ingredient","add","direction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classes from \"./AddRecipe.module.scss\";\nimport icons from \"../../img/icons.svg\";\nconst AddRecipe = (props) => {\n  const onHideHandler = () => {\n    props.setAddingRecipe(false);\n  };\n  const categoryArr = [\n    \"vegetarian\",\n    \"non-vegetarian\",\n    \"breakfast\",\n    \"lunch\",\n    \"dinner\",\n    \"desserts\",\n    \"pescatarian\",\n  ];\n  const [ingredients, setIngredients] = useState([{ value: null }]);\n  const [directions, setDirections] = useState([{ value: null }]);\n  const [enteredName, setEnteredName] = useState(\"\");\n  const addIngredientHandler = () => {\n    const val = [...ingredients];\n    val.push({ value: null });\n    setIngredients(val);\n  };\n  const onIngredientChangeHandler = (i, e) => {\n    const val = [...ingredients];\n    val[i].value = e.target.value;\n    setIngredients(val);\n  };\n  const addDirectionHandler = () => {\n    const val = [...directions];\n    val.push({ value: null });\n    setDirections(val);\n  };\n  const onDirectionChangeHandler = (i, e) => {\n    const val = [...directions];\n    val[i].value = e.target.value;\n    setDirections(val);\n  };\n  console.log(ingredients);\n\n  const onNameChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n    // console.log(.target.value);\n  };\n  return (\n    <div className={classes.overlay}>\n      <div className={classes.container}>\n        <div>\n          <button className={classes.exit} onClick={onHideHandler}>\n            <svg>\n              <use xlinkHref={`${icons}#icon-exit`}></use>\n            </svg>\n          </button>\n        </div>\n\n        <div className={classes.details_one}>\n          <h4>Add Recipe</h4>\n          <form className={classes.form}>\n            <div className={classes.name}>\n              <label> Name: </label>\n              <input type=\"text\" onChange={onNameChangeHandler} />\n            </div>\n            <div className={classes.cuisine}>\n              <label> Cuisine: </label>\n              <input type=\"text\" />\n            </div>\n            <div className={classes.category}>\n              <label> Category: </label>\n              <span>\n                {categoryArr.map((category) => {\n                  return (\n                    <button className={classes.categoryButton}>\n                      {category}\n                    </button>\n                  );\n                })}\n              </span>\n            </div>\n            <div className={classes.extrainfo}>\n              <span>\n                <label> Servings: </label>\n                <input type=\"text\" />\n              </span>\n              <span>\n                <label> Cooking Time: </label>\n                <input type=\"text\" />\n              </span>\n            </div>\n            <div className={classes.ingredients}>\n              <label>Ingredients:</label>\n              {ingredients.map((ingredient, i) => {\n                return (\n                  <span>\n                    <label>{i + 1}</label>\n                    <input\n                      type=\"text\"\n                      value={ingredient.value || \"\"}\n                      onChange={(e) => onIngredientChangeHandler(i, e)}\n                    />\n                  </span>\n                );\n              })}\n\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.add}\n                onClick={addIngredientHandler}\n              />\n            </div>\n            <div className={classes.directions}>\n              <label>Directions:</label>\n              {directions.map((direction, i) => {\n                return (\n                  <span>\n                    <label>{i + 1}</label>\n                    <input\n                      type=\"text\"\n                      value={direction.value || \"\"}\n                      onChange={(e) => onDirectionChangeHandler(i, e)}\n                    />\n                  </span>\n                );\n              })}\n\n              <input\n                type=\"button\"\n                value=\"+\"\n                className={classes.add}\n                onClick={addDirectionHandler}\n              />\n            </div>\n            <button className={classes.add}>SUBMIT</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}