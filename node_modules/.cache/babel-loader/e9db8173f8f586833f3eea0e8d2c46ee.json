{"ast":null,"code":"var _jsxFileName = \"/Users/kavyamandla/Desktop/react/recipe-application/client/src/components/Preview/Preview.js\";\nimport React, { useEffect } from \"react\"; // import { useSelector } from \"react-redux\";\n\nimport classes from \"./Preview.module.scss\";\nimport PreviewResult from \"./PreviewResult.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = props => {\n  // console.log(props.data);\n  // const recipes = useSelector((state) => state.recipes);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes.results,\n    children: props.data.map(recipe => {\n      return /*#__PURE__*/_jsxDEV(PreviewResult, {\n        recipe: recipe,\n        setSelected: props.setSelected,\n        setIsSelected: props.setIsSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/kavyamandla/Desktop/react/recipe-application/client/src/components/Preview/Preview.js"],"names":["React","useEffect","classes","PreviewResult","Preview","props","results","data","map","recipe","setSelected","setIsSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AAEA;AACA,sBACE;AAAI,IAAA,SAAS,EAAEH,OAAO,CAACI,OAAvB;AAAA,cACGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,MAAD,IAAY;AAC1B,0BACE,QAAC,aAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAEE,QAAA,WAAW,EAAEJ,KAAK,CAACK,WAFrB;AAGE,QAAA,aAAa,EAAEL,KAAK,CAACM;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;KAAMP,O;AAmBN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\n// import { useSelector } from \"react-redux\";\nimport classes from \"./Preview.module.scss\";\nimport PreviewResult from \"./PreviewResult.js\";\n\nconst Preview = (props) => {\n  // console.log(props.data);\n\n  // const recipes = useSelector((state) => state.recipes);\n  return (\n    <ul className={classes.results}>\n      {props.data.map((recipe) => {\n        return (\n          <PreviewResult\n            recipe={recipe}\n            setSelected={props.setSelected}\n            setIsSelected={props.setIsSelected}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}